[
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~Rift2Chip|Issue>bufReqNum"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~Rift2Chip|Issue>bufReqNum"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~Rift2Chip|Issue>bufReqNum"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~Rift2Chip|Issue>bufReqNum"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~Rift2Chip|Issue>bufReqNum"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~Rift2Chip|Issue>bufReqNum"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~Rift2Chip|Issue>bufReqNum"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~Rift2Chip|Issue>bufReqNum"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~Rift2Chip|Issue>bufReqNum"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~Rift2Chip|Issue>bufReqNum"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~Rift2Chip|Issue>bufReqNum"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~Rift2Chip|Issue>bufReqNum"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~Rift2Chip|Issue>bufReqNum"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~Rift2Chip|Issue>bufReqNum"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~Rift2Chip|Issue>bufReqNum"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~Rift2Chip|Issue>bufReqNum"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~Rift2Chip|SRT4Divider>dividendIdx"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~Rift2Chip|diff>io"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~Rift2Chip|diff>XReg"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~Rift2Chip|diff>FReg1"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~Rift2Chip|diff>FReg2"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_1",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~Rift2Chip|DebugModule>abstractDataMem_wen1"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~Rift2Chip|DebugModule>abstractDataMem_ren1"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~Rift2Chip|DebugModule>programBufferMem_wen1"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~Rift2Chip|DebugModule>programBufferMem_ren1"
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"Rift2Chip.DebugModule",
    "regMappingSer":{
      "displayName":"DebugModule",
      "deviceName":"DebugModule",
      "baseAddress":0,
      "regFields":[
        {
          "byteOffset":"0x100",
          "bitOffset":0,
          "bitWidth":32,
          "name":"debug_hart_halted",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Debug ROM Causes hart to write its hartID here when it is in Debug Mode.",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x104",
          "bitOffset":0,
          "bitWidth":32,
          "name":"debug_hart_going",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Debug ROM causes hart to write 0 here when it begins executing Debug Mode instructions.",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x108",
          "bitOffset":0,
          "bitWidth":32,
          "name":"debug_hart_resuming",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Debug ROM causes hart to write its hartID here when it leaves Debug Mode.",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x10c",
          "bitOffset":0,
          "bitWidth":32,
          "name":"debug_hart_exception",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Debug ROM causes hart to write 0 here if it gets an exception in Debug Mode.",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x300",
          "bitOffset":0,
          "bitWidth":32,
          "name":"debug_whereto",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Instruction filled in by Debug Module to control hart in Debug Mode",
          "group":"None",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x320",
          "bitOffset":0,
          "bitWidth":32,
          "name":"unnamedRegField320_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x320",
          "bitOffset":32,
          "bitWidth":32,
          "name":"unnamedRegField320_32",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x320",
          "bitOffset":64,
          "bitWidth":32,
          "name":"unnamedRegField320_64",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x320",
          "bitOffset":96,
          "bitWidth":32,
          "name":"unnamedRegField320_96",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x320",
          "bitOffset":128,
          "bitWidth":32,
          "name":"unnamedRegField320_128",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x320",
          "bitOffset":160,
          "bitWidth":32,
          "name":"unnamedRegField320_160",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x320",
          "bitOffset":192,
          "bitWidth":32,
          "name":"unnamedRegField320_192",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x320",
          "bitOffset":224,
          "bitWidth":32,
          "name":"unnamedRegField320_224",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":0,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_progbuf",
          "groupDesc":"Program buffer used to communicate with Debug Module",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":32,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":64,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":96,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":128,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":160,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":192,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":224,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":256,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":288,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":320,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":352,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":384,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":416,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":448,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x340",
          "bitOffset":480,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_progbuf",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x380",
          "bitOffset":0,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_data",
          "groupDesc":"Data used to communicate with Debug Module",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x380",
          "bitOffset":32,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_data",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x380",
          "bitOffset":64,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_data",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x380",
          "bitOffset":96,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_data",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x380",
          "bitOffset":128,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_data",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x380",
          "bitOffset":160,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_data",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x380",
          "bitOffset":192,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_data",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x380",
          "bitOffset":224,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_data",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x380",
          "bitOffset":256,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_data",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x380",
          "bitOffset":288,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_data",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x380",
          "bitOffset":320,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_data",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x380",
          "bitOffset":352,
          "bitWidth":32,
          "name":"NA",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"NA",
          "group":"debug_data",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x400",
          "bitOffset":0,
          "bitWidth":8,
          "name":"unnamedRegField400_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":0,
          "bitWidth":8,
          "name":"unnamedRegField800_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":8,
          "bitWidth":8,
          "name":"unnamedRegField800_8",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":16,
          "bitWidth":8,
          "name":"unnamedRegField800_16",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":24,
          "bitWidth":8,
          "name":"unnamedRegField800_24",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":32,
          "bitWidth":8,
          "name":"unnamedRegField800_32",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":40,
          "bitWidth":8,
          "name":"unnamedRegField800_40",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":48,
          "bitWidth":8,
          "name":"unnamedRegField800_48",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":56,
          "bitWidth":8,
          "name":"unnamedRegField800_56",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":64,
          "bitWidth":8,
          "name":"unnamedRegField800_64",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":72,
          "bitWidth":8,
          "name":"unnamedRegField800_72",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":80,
          "bitWidth":8,
          "name":"unnamedRegField800_80",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":88,
          "bitWidth":8,
          "name":"unnamedRegField800_88",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":96,
          "bitWidth":8,
          "name":"unnamedRegField800_96",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":104,
          "bitWidth":8,
          "name":"unnamedRegField800_104",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":112,
          "bitWidth":8,
          "name":"unnamedRegField800_112",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":120,
          "bitWidth":8,
          "name":"unnamedRegField800_120",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":128,
          "bitWidth":8,
          "name":"unnamedRegField800_128",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":136,
          "bitWidth":8,
          "name":"unnamedRegField800_136",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":144,
          "bitWidth":8,
          "name":"unnamedRegField800_144",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":152,
          "bitWidth":8,
          "name":"unnamedRegField800_152",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":160,
          "bitWidth":8,
          "name":"unnamedRegField800_160",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":168,
          "bitWidth":8,
          "name":"unnamedRegField800_168",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":176,
          "bitWidth":8,
          "name":"unnamedRegField800_176",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":184,
          "bitWidth":8,
          "name":"unnamedRegField800_184",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":192,
          "bitWidth":8,
          "name":"unnamedRegField800_192",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":200,
          "bitWidth":8,
          "name":"unnamedRegField800_200",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":208,
          "bitWidth":8,
          "name":"unnamedRegField800_208",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":216,
          "bitWidth":8,
          "name":"unnamedRegField800_216",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":224,
          "bitWidth":8,
          "name":"unnamedRegField800_224",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":232,
          "bitWidth":8,
          "name":"unnamedRegField800_232",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":240,
          "bitWidth":8,
          "name":"unnamedRegField800_240",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":248,
          "bitWidth":8,
          "name":"unnamedRegField800_248",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":256,
          "bitWidth":8,
          "name":"unnamedRegField800_256",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":264,
          "bitWidth":8,
          "name":"unnamedRegField800_264",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":272,
          "bitWidth":8,
          "name":"unnamedRegField800_272",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":280,
          "bitWidth":8,
          "name":"unnamedRegField800_280",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":288,
          "bitWidth":8,
          "name":"unnamedRegField800_288",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":296,
          "bitWidth":8,
          "name":"unnamedRegField800_296",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":304,
          "bitWidth":8,
          "name":"unnamedRegField800_304",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":312,
          "bitWidth":8,
          "name":"unnamedRegField800_312",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":320,
          "bitWidth":8,
          "name":"unnamedRegField800_320",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":328,
          "bitWidth":8,
          "name":"unnamedRegField800_328",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":336,
          "bitWidth":8,
          "name":"unnamedRegField800_336",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":344,
          "bitWidth":8,
          "name":"unnamedRegField800_344",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":352,
          "bitWidth":8,
          "name":"unnamedRegField800_352",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":360,
          "bitWidth":8,
          "name":"unnamedRegField800_360",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":368,
          "bitWidth":8,
          "name":"unnamedRegField800_368",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":376,
          "bitWidth":8,
          "name":"unnamedRegField800_376",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":384,
          "bitWidth":8,
          "name":"unnamedRegField800_384",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":392,
          "bitWidth":8,
          "name":"unnamedRegField800_392",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":400,
          "bitWidth":8,
          "name":"unnamedRegField800_400",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":408,
          "bitWidth":8,
          "name":"unnamedRegField800_408",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":416,
          "bitWidth":8,
          "name":"unnamedRegField800_416",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":424,
          "bitWidth":8,
          "name":"unnamedRegField800_424",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":432,
          "bitWidth":8,
          "name":"unnamedRegField800_432",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":440,
          "bitWidth":8,
          "name":"unnamedRegField800_440",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":448,
          "bitWidth":8,
          "name":"unnamedRegField800_448",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":456,
          "bitWidth":8,
          "name":"unnamedRegField800_456",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":464,
          "bitWidth":8,
          "name":"unnamedRegField800_464",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":472,
          "bitWidth":8,
          "name":"unnamedRegField800_472",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":480,
          "bitWidth":8,
          "name":"unnamedRegField800_480",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":488,
          "bitWidth":8,
          "name":"unnamedRegField800_488",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":496,
          "bitWidth":8,
          "name":"unnamedRegField800_496",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":504,
          "bitWidth":8,
          "name":"unnamedRegField800_504",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":512,
          "bitWidth":8,
          "name":"unnamedRegField800_512",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":520,
          "bitWidth":8,
          "name":"unnamedRegField800_520",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":528,
          "bitWidth":8,
          "name":"unnamedRegField800_528",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":536,
          "bitWidth":8,
          "name":"unnamedRegField800_536",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":544,
          "bitWidth":8,
          "name":"unnamedRegField800_544",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":552,
          "bitWidth":8,
          "name":"unnamedRegField800_552",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":560,
          "bitWidth":8,
          "name":"unnamedRegField800_560",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":568,
          "bitWidth":8,
          "name":"unnamedRegField800_568",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":576,
          "bitWidth":8,
          "name":"unnamedRegField800_576",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":584,
          "bitWidth":8,
          "name":"unnamedRegField800_584",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":592,
          "bitWidth":8,
          "name":"unnamedRegField800_592",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":600,
          "bitWidth":8,
          "name":"unnamedRegField800_600",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":608,
          "bitWidth":8,
          "name":"unnamedRegField800_608",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":616,
          "bitWidth":8,
          "name":"unnamedRegField800_616",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":624,
          "bitWidth":8,
          "name":"unnamedRegField800_624",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":632,
          "bitWidth":8,
          "name":"unnamedRegField800_632",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":640,
          "bitWidth":8,
          "name":"unnamedRegField800_640",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":648,
          "bitWidth":8,
          "name":"unnamedRegField800_648",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":656,
          "bitWidth":8,
          "name":"unnamedRegField800_656",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":664,
          "bitWidth":8,
          "name":"unnamedRegField800_664",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":672,
          "bitWidth":8,
          "name":"unnamedRegField800_672",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":680,
          "bitWidth":8,
          "name":"unnamedRegField800_680",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":688,
          "bitWidth":8,
          "name":"unnamedRegField800_688",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":696,
          "bitWidth":8,
          "name":"unnamedRegField800_696",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":704,
          "bitWidth":8,
          "name":"unnamedRegField800_704",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":712,
          "bitWidth":8,
          "name":"unnamedRegField800_712",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":720,
          "bitWidth":8,
          "name":"unnamedRegField800_720",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":728,
          "bitWidth":8,
          "name":"unnamedRegField800_728",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":736,
          "bitWidth":8,
          "name":"unnamedRegField800_736",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":744,
          "bitWidth":8,
          "name":"unnamedRegField800_744",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":752,
          "bitWidth":8,
          "name":"unnamedRegField800_752",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":760,
          "bitWidth":8,
          "name":"unnamedRegField800_760",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":768,
          "bitWidth":8,
          "name":"unnamedRegField800_768",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":776,
          "bitWidth":8,
          "name":"unnamedRegField800_776",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":784,
          "bitWidth":8,
          "name":"unnamedRegField800_784",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":792,
          "bitWidth":8,
          "name":"unnamedRegField800_792",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":800,
          "bitWidth":8,
          "name":"unnamedRegField800_800",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":808,
          "bitWidth":8,
          "name":"unnamedRegField800_808",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":816,
          "bitWidth":8,
          "name":"unnamedRegField800_816",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x800",
          "bitOffset":824,
          "bitWidth":8,
          "name":"unnamedRegField800_824",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_2",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_3",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"Rift2Chip.AClint",
    "regMappingSer":{
      "displayName":"AClint",
      "deviceName":"AClint",
      "baseAddress":131072,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":64,
          "name":"mtimecmp_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"mtimecmp_0",
          "group":"mtimecmp",
          "groupDesc":"MTIMECMP for hart x",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x8000",
          "bitOffset":0,
          "bitWidth":64,
          "name":"mtime",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"mtime",
          "group":"mtime",
          "groupDesc":"Timer Register",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x9000",
          "bitOffset":0,
          "bitWidth":1,
          "name":"msip_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"MSIP bit for Hart 0",
          "group":"msip",
          "groupDesc":"MSIP Bits",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xa000",
          "bitOffset":0,
          "bitWidth":1,
          "name":"ssip_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"SSIP bit for Hart 0",
          "group":"ssip",
          "groupDesc":"SSIP Bits",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_4",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_5",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"Rift2Chip.Plic",
    "regMappingSer":{
      "displayName":"Plic",
      "deviceName":"Plic",
      "baseAddress":268435456,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":32,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"priority",
          "groupDesc":"Acting priority of interrupt source",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":32,
          "bitWidth":32,
          "name":"priority_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 0",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":64,
          "bitWidth":32,
          "name":"priority_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 1",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":96,
          "bitWidth":32,
          "name":"priority_2",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 2",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":128,
          "bitWidth":32,
          "name":"priority_3",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 3",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":160,
          "bitWidth":32,
          "name":"priority_4",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 4",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":192,
          "bitWidth":32,
          "name":"priority_5",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 5",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":224,
          "bitWidth":32,
          "name":"priority_6",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 6",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":256,
          "bitWidth":32,
          "name":"priority_7",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 7",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":288,
          "bitWidth":32,
          "name":"priority_8",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 8",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":320,
          "bitWidth":32,
          "name":"priority_9",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 9",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":352,
          "bitWidth":32,
          "name":"priority_10",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 10",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":384,
          "bitWidth":32,
          "name":"priority_11",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 11",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":416,
          "bitWidth":32,
          "name":"priority_12",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 12",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":448,
          "bitWidth":32,
          "name":"priority_13",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 13",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":480,
          "bitWidth":32,
          "name":"priority_14",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 14",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":512,
          "bitWidth":32,
          "name":"priority_15",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 15",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":544,
          "bitWidth":32,
          "name":"priority_16",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 16",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":576,
          "bitWidth":32,
          "name":"priority_17",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 17",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":608,
          "bitWidth":32,
          "name":"priority_18",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 18",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":640,
          "bitWidth":32,
          "name":"priority_19",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 19",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":672,
          "bitWidth":32,
          "name":"priority_20",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 20",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":704,
          "bitWidth":32,
          "name":"priority_21",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 21",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":736,
          "bitWidth":32,
          "name":"priority_22",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 22",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":768,
          "bitWidth":32,
          "name":"priority_23",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 23",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":800,
          "bitWidth":32,
          "name":"priority_24",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 24",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":832,
          "bitWidth":32,
          "name":"priority_25",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 25",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":864,
          "bitWidth":32,
          "name":"priority_26",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 26",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":896,
          "bitWidth":32,
          "name":"priority_27",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 27",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":928,
          "bitWidth":32,
          "name":"priority_28",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 28",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":960,
          "bitWidth":32,
          "name":"priority_29",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 29",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":992,
          "bitWidth":32,
          "name":"priority_30",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 30",
          "group":"priority",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":0,
          "bitWidth":1,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"pending",
          "groupDesc":"Pending Bit Array. 1 Bit for each interrupt source.",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":1,
          "bitWidth":1,
          "name":"pending_0",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 0 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":2,
          "bitWidth":1,
          "name":"pending_1",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 1 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":3,
          "bitWidth":1,
          "name":"pending_2",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 2 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":4,
          "bitWidth":1,
          "name":"pending_3",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 3 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":5,
          "bitWidth":1,
          "name":"pending_4",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 4 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":6,
          "bitWidth":1,
          "name":"pending_5",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 5 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":7,
          "bitWidth":1,
          "name":"pending_6",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 6 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":8,
          "bitWidth":1,
          "name":"pending_7",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 7 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":9,
          "bitWidth":1,
          "name":"pending_8",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 8 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":10,
          "bitWidth":1,
          "name":"pending_9",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 9 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":11,
          "bitWidth":1,
          "name":"pending_10",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 10 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":12,
          "bitWidth":1,
          "name":"pending_11",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 11 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":13,
          "bitWidth":1,
          "name":"pending_12",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 12 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":14,
          "bitWidth":1,
          "name":"pending_13",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 13 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":15,
          "bitWidth":1,
          "name":"pending_14",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 14 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":16,
          "bitWidth":1,
          "name":"pending_15",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 15 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":17,
          "bitWidth":1,
          "name":"pending_16",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 16 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":18,
          "bitWidth":1,
          "name":"pending_17",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 17 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":19,
          "bitWidth":1,
          "name":"pending_18",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 18 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":20,
          "bitWidth":1,
          "name":"pending_19",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 19 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":21,
          "bitWidth":1,
          "name":"pending_20",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 20 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":22,
          "bitWidth":1,
          "name":"pending_21",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 21 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":23,
          "bitWidth":1,
          "name":"pending_22",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 22 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":24,
          "bitWidth":1,
          "name":"pending_23",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 23 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":25,
          "bitWidth":1,
          "name":"pending_24",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 24 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":26,
          "bitWidth":1,
          "name":"pending_25",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 25 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":27,
          "bitWidth":1,
          "name":"pending_26",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 26 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":28,
          "bitWidth":1,
          "name":"pending_27",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 27 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":29,
          "bitWidth":1,
          "name":"pending_28",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 28 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":30,
          "bitWidth":1,
          "name":"pending_29",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 29 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":31,
          "bitWidth":1,
          "name":"pending_30",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 30 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":0,
          "bitWidth":1,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"enables_0",
          "groupDesc":"Enable bits for each interrupt source for target 0. 1 bit for each interrupt source.",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":1,
          "bitWidth":1,
          "name":"enables_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":2,
          "bitWidth":1,
          "name":"enables_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":3,
          "bitWidth":1,
          "name":"enables_2",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":4,
          "bitWidth":1,
          "name":"enables_3",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":5,
          "bitWidth":1,
          "name":"enables_4",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":6,
          "bitWidth":1,
          "name":"enables_5",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":7,
          "bitWidth":1,
          "name":"enables_6",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":8,
          "bitWidth":1,
          "name":"enables_7",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":9,
          "bitWidth":1,
          "name":"enables_8",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":10,
          "bitWidth":1,
          "name":"enables_9",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":11,
          "bitWidth":1,
          "name":"enables_10",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":12,
          "bitWidth":1,
          "name":"enables_11",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":13,
          "bitWidth":1,
          "name":"enables_12",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":14,
          "bitWidth":1,
          "name":"enables_13",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":15,
          "bitWidth":1,
          "name":"enables_14",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":16,
          "bitWidth":1,
          "name":"enables_15",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":17,
          "bitWidth":1,
          "name":"enables_16",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":18,
          "bitWidth":1,
          "name":"enables_17",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":19,
          "bitWidth":1,
          "name":"enables_18",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":20,
          "bitWidth":1,
          "name":"enables_19",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":21,
          "bitWidth":1,
          "name":"enables_20",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":22,
          "bitWidth":1,
          "name":"enables_21",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":23,
          "bitWidth":1,
          "name":"enables_22",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":24,
          "bitWidth":1,
          "name":"enables_23",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":25,
          "bitWidth":1,
          "name":"enables_24",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":26,
          "bitWidth":1,
          "name":"enables_25",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":27,
          "bitWidth":1,
          "name":"enables_26",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":28,
          "bitWidth":1,
          "name":"enables_27",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":29,
          "bitWidth":1,
          "name":"enables_28",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":30,
          "bitWidth":1,
          "name":"enables_29",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":31,
          "bitWidth":1,
          "name":"enables_30",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x200000",
          "bitOffset":0,
          "bitWidth":32,
          "name":"threshold_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Interrupt & claim threshold for target 0. Maximum value is 8.",
          "group":"hart_0",
          "groupDesc":"hart_0",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x200000",
          "bitOffset":32,
          "bitWidth":32,
          "name":"claim_complete_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"Some(MODIFY)",
          "rdAction":"Some(MODIFY)",
          "desc":"Claim/Complete register for Target 0. Reading this register returns the claimed interrupt number and makes it no longer pending.Writing the interrupt number back completes the interrupt.",
          "group":"hart_0",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_6",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_7",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"Rift2Chip.Directory.cc_dir",
    "address_width":6,
    "name":"cc_dir",
    "data_width":48,
    "depth":64,
    "description":"Directory RAM",
    "write_mask_granularity":24
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"Rift2Chip.BankedStore.cc_banks_0",
    "address_width":6,
    "name":"cc_banks_0",
    "data_width":128,
    "depth":64,
    "description":"Banked Store",
    "write_mask_granularity":128
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"Rift2Chip.BankedStore.cc_banks_1",
    "address_width":6,
    "name":"cc_banks_1",
    "data_width":128,
    "depth":64,
    "description":"Banked Store",
    "write_mask_granularity":128
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"Rift2Chip.BankedStore.cc_banks_2",
    "address_width":6,
    "name":"cc_banks_2",
    "data_width":128,
    "depth":64,
    "description":"Banked Store",
    "write_mask_granularity":128
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"Rift2Chip.BankedStore.cc_banks_3",
    "address_width":6,
    "name":"cc_banks_3",
    "data_width":128,
    "depth":64,
    "description":"Banked Store",
    "write_mask_granularity":128
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_8",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_9",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_10",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_11",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_12",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_13",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_14",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_15",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_16",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_17",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_18",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_19",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_20",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_21",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_22",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_23",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_24",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_25",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_26",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_27",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_28",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_29",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"Rift2Chip.TLWidthWidget"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_30",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_31",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"Rift2Chip.TLWidthWidget_1"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_32",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_33",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_34",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_35",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_36",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_37",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_38",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_39",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_40",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_41",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_42",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_43",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_44",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_45",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_46",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_47",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_48",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_49",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_50",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_51",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_52",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_53",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_54",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_55",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_56",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_57",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_58",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_59",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_60",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_61",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_62",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_63",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_64",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_65",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_66",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_67",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_68",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_69",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_70",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"Rift2Chip.plusarg_reader_71",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  }
]