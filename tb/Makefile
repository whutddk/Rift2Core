# verilator version
verilator      ?= verilator
R2        ?= ${R2}



isa += rv64ui-p-add
isa += rv64ui-v-add
isa += rv64ui-p-addi
isa += rv64ui-v-addi
isa += rv64ui-p-addiw
isa += rv64ui-v-addiw
isa += rv64ui-p-addw
isa += rv64ui-v-addw
isa += rv64ui-p-and
isa += rv64ui-v-and
isa += rv64ui-p-andi
isa += rv64ui-v-andi
isa += rv64ui-p-auipc
isa += rv64ui-v-auipc
isa += rv64ui-p-beq
isa += rv64ui-v-beq
isa += rv64ui-p-bge
isa += rv64ui-v-bge
isa += rv64ui-p-bgeu
isa += rv64ui-v-bgeu
isa += rv64ui-p-blt
isa += rv64ui-v-blt
isa += rv64ui-p-bltu
isa += rv64ui-v-bltu
isa += rv64ui-p-bne
isa += rv64ui-v-bne
isa += rv64ui-p-fence_i
isa += rv64ui-v-fence_i
isa += rv64ui-p-jal
isa += rv64ui-v-jal
isa += rv64ui-p-jalr
isa += rv64ui-v-jalr
isa += rv64ui-p-lb
isa += rv64ui-v-lb
isa += rv64ui-p-lbu
isa += rv64ui-v-lbu
isa += rv64ui-p-ld
isa += rv64ui-v-ld
isa += rv64ui-p-lh
isa += rv64ui-v-lh
isa += rv64ui-p-lhu
isa += rv64ui-v-lhu
isa += rv64ui-p-lui
isa += rv64ui-v-lui
isa += rv64ui-p-lw
isa += rv64ui-v-lw
isa += rv64ui-p-lwu
isa += rv64ui-v-lwu
isa += rv64ui-p-or
isa += rv64ui-v-or
isa += rv64ui-p-ori
isa += rv64ui-v-ori
isa += rv64ui-p-sb
isa += rv64ui-v-sb
isa += rv64ui-p-sd
isa += rv64ui-v-sd
isa += rv64ui-p-sh
isa += rv64ui-v-sh
isa += rv64ui-p-simple
isa += rv64ui-v-simple
isa += rv64ui-p-sll
isa += rv64ui-v-sll
isa += rv64ui-p-slli
isa += rv64ui-v-slli
isa += rv64ui-p-slliw
isa += rv64ui-v-slliw
isa += rv64ui-p-sllw
isa += rv64ui-v-sllw
isa += rv64ui-p-slt
isa += rv64ui-v-slt
isa += rv64ui-p-slti
isa += rv64ui-v-slti
isa += rv64ui-p-sltiu
isa += rv64ui-v-sltiu
isa += rv64ui-p-sltu
isa += rv64ui-v-sltu
isa += rv64ui-p-sra
isa += rv64ui-v-sra
isa += rv64ui-p-srai
isa += rv64ui-v-srai
isa += rv64ui-p-sraiw
isa += rv64ui-v-sraiw
isa += rv64ui-p-sraw
isa += rv64ui-v-sraw
isa += rv64ui-p-srl
isa += rv64ui-v-srl
isa += rv64ui-p-srli
isa += rv64ui-v-srli
isa += rv64ui-p-srliw
isa += rv64ui-v-srliw
isa += rv64ui-p-srlw
isa += rv64ui-v-srlw
isa += rv64ui-p-sub
isa += rv64ui-v-sub
isa += rv64ui-p-subw
isa += rv64ui-v-subw
isa += rv64ui-p-sw
isa += rv64ui-v-sw
isa += rv64ui-p-xor
isa += rv64ui-v-xor
isa += rv64ui-p-xori
isa += rv64ui-v-xori
isa += rv64um-p-div
isa += rv64um-v-div
isa += rv64um-p-divu
isa += rv64um-v-divu
isa += rv64um-p-divuw
isa += rv64um-v-divuw
isa += rv64um-p-divw
isa += rv64um-v-divw
isa += rv64um-p-mul
isa += rv64um-v-mul
isa += rv64um-p-mulh
isa += rv64um-v-mulh
isa += rv64um-p-mulhsu
isa += rv64um-v-mulhsu
isa += rv64um-p-mulhu
isa += rv64um-v-mulhu
isa += rv64um-p-mulw
isa += rv64um-v-mulw
isa += rv64um-p-rem
isa += rv64um-v-rem
isa += rv64um-p-remu
isa += rv64um-v-remu
isa += rv64um-p-remuw
isa += rv64um-v-remuw
isa += rv64um-p-remw
isa += rv64um-v-remw

isa += rv64mi-p-access
isa += rv64mi-p-breakpoint
isa += rv64mi-p-csr
isa += rv64mi-p-illegal
isa += rv64mi-p-ma_addr
isa += rv64mi-p-ma_fetch
isa += rv64mi-p-mcsr
isa += rv64mi-p-sbreak
isa += rv64mi-p-scall
isa += rv64si-p-csr
isa += rv64si-p-dirty
isa += rv64si-p-icache-alias
isa += rv64si-p-ma_fetch
isa += rv64si-p-sbreak
isa += rv64si-p-scall
isa += rv64si-p-wfi
    

isa += rv64ua-p-amoadd_d
isa += rv64ua-v-amoadd_d
isa += rv64ua-p-amoadd_w
isa += rv64ua-v-amoadd_w
isa += rv64ua-p-amoand_d
isa += rv64ua-v-amoand_d
isa += rv64ua-p-amoand_w
isa += rv64ua-v-amoand_w
isa += rv64ua-p-amomax_d
isa += rv64ua-v-amomax_d
isa += rv64ua-p-amomax_w
isa += rv64ua-v-amomax_w
isa += rv64ua-p-amomaxu_d
isa += rv64ua-v-amomaxu_d
isa += rv64ua-p-amomaxu_w
isa += rv64ua-v-amomaxu_w
isa += rv64ua-p-amomin_d
isa += rv64ua-v-amomin_d
isa += rv64ua-p-amomin_w
isa += rv64ua-v-amomin_w
isa += rv64ua-p-amominu_d
isa += rv64ua-v-amominu_d
isa += rv64ua-p-amominu_w
isa += rv64ua-v-amominu_w
isa += rv64ua-p-amoor_d
isa += rv64ua-v-amoor_d
isa += rv64ua-p-amoor_w
isa += rv64ua-v-amoor_w
isa += rv64ua-p-amoswap_d
isa += rv64ua-v-amoswap_d
isa += rv64ua-p-amoswap_w
isa += rv64ua-v-amoswap_w
isa += rv64ua-p-amoxor_d
isa += rv64ua-v-amoxor_d
isa += rv64ua-p-amoxor_w
isa += rv64ua-v-amoxor_w
isa += rv64ua-p-lrsc
isa += rv64ua-v-lrsc
isa += rv64uc-p-rvc
isa += rv64uc-v-rvc

# isa += rv64ssvnapot-p-napot

# isa += rv64ud-p-fadd
# isa += rv64ud-v-fadd
# isa += rv64ud-p-fclass
# isa += rv64ud-v-fclass
# isa += rv64ud-p-fcmp
# isa += rv64ud-v-fcmp
# isa += rv64ud-p-fcvt
# isa += rv64ud-v-fcvt
# isa += rv64ud-p-fcvt_w
# isa += rv64ud-v-fcvt_w
# isa += rv64ud-p-fdiv
# isa += rv64ud-v-fdiv
# isa += rv64ud-p-fmadd
# isa += rv64ud-v-fmadd
# isa += rv64ud-p-fmin
# isa += rv64ud-v-fmin
# isa += rv64ud-p-ldst
# isa += rv64ud-v-ldst
# isa += rv64ud-p-move
# isa += rv64ud-v-move
# isa += rv64ud-p-recoding
# isa += rv64ud-v-recoding
# isa += rv64ud-p-structural
# isa += rv64ud-v-structural
# isa += rv64uf-p-fadd
# isa += rv64uf-v-fadd
# isa += rv64uf-p-fclass
# isa += rv64uf-v-fclass
# isa += rv64uf-p-fcmp
# isa += rv64uf-v-fcmp
# isa += rv64uf-p-fcvt
# isa += rv64uf-v-fcvt
# isa += rv64uf-p-fcvt_w
# isa += rv64uf-v-fcvt_w
# isa += rv64uf-p-fdiv
# isa += rv64uf-v-fdiv
# isa += rv64uf-p-fmadd
# isa += rv64uf-v-fmadd
# isa += rv64uf-p-fmin
# isa += rv64uf-v-fmin
# isa += rv64uf-p-ldst
# isa += rv64uf-v-ldst
# isa += rv64uf-p-move
# isa += rv64uf-v-move
# isa += rv64uf-p-recoding
# isa += rv64uf-v-recoding

# isa += rv64uzfh-p-fadd
# isa += rv64uzfh-v-fadd
# isa += rv64uzfh-p-fclass
# isa += rv64uzfh-v-fclass
# isa += rv64uzfh-p-fcmp
# isa += rv64uzfh-v-fcmp
# isa += rv64uzfh-p-fcvt
# isa += rv64uzfh-v-fcvt
# isa += rv64uzfh-p-fcvt_w
# isa += rv64uzfh-v-fcvt_w
# isa += rv64uzfh-p-fdiv
# isa += rv64uzfh-v-fdiv
# isa += rv64uzfh-p-fmadd
# isa += rv64uzfh-v-fmadd
# isa += rv64uzfh-p-fmin
# isa += rv64uzfh-v-fmin
# isa += rv64uzfh-p-ldst
# isa += rv64uzfh-v-ldst
# isa += rv64uzfh-p-move
# isa += rv64uzfh-v-move
# isa += rv64uzfh-p-recoding
# isa += rv64uzfh-v-recoding





.DEFAULT_GOAL = unit

.PHONY: sim unit clean



clean:
	rm ./build/*.cpp
	rm ./build/*.o
	rm ./build/*.d
	rm ./build/*.h
	rm ./build/*.mk
	rm ./build/*.a


sim:
	verilator -Wno-fatal  \
	--timescale "1 ns / 1 ps" \
	-y ${R2}/generated/ \
	-y ${R2}/tb/ \
	-y ${R2}/tb/vtb/ \
	--top-module SimTop \
	--trace \
	-LDFLAGS -ldromajo_cosim \
	--cc ${R2}/tb/verilator/SimTop.v  \
	--exe --build \
	./verilator/sim_main.cpp  \
	./verilator/diff.cpp \
	-Mdir build \
	-j 128
# 	rm ./obj_dir/*.d ./obj_dir/*.o ./obj_dir/*.cpp



unit: sim
	$(foreach test, $(isa), ./build/VSimTop -l -f ./ci/$(test); )


# TESTFILE ?= rv64ui-p-add
single: sim
	./build/VSimTop -w -d -l -f ./ci/$(TESTFILE)

dromajo:
	verilator -Wno-fatal  \
	--timescale "1 ns / 1 ns" \
	-y ${R2}/generated/ \
	-y ${R2}/tb/ \
	-y ${R2}/tb/vtb/ \
	--top-module test \
	--trace \
	-LDFLAGS -ldromajo_cosim \
	--cc ${R2}/tb/verilator/test.v  \
	--exe --build \
	./verilator/dromajo.cpp  \
	./verilator/diff.cpp \
	-I./verilator \
	-Mdir build \
	-j 8

dhrystone5: sim
	./build/VSimTop -w -f ./ci/dhrystone5.riscv

dhrystone500: sim
	./build/VSimTop -f ./ci/dhrystone500.riscv


coremark: sim
	./build/VSimTop  -f ./ci/coremark1_bare

wave:
	gtkwave ./build/wave.vcd



module:
	verilator -Wno-fatal  \
	--timescale "1 ns / 1 ps" \
	-y ${R2}/generated/ \
	-y ${R2}/tb/verilator/mdl_test/ \
	-y ${R2}/tb/ \
	-y ${R2}/tb/vtb/ \
	-y ${R2}/tb/vtb/ \
	--top-module $(TOP) \
	--trace \
	--cc ${R2}/tb/verilator/mdl_test/$(TOP).v  \
	--exe --build \
	./verilator/mdl_test/$(TOP).cpp  \
	-Mdir build \
	-j 8

	./build/V$(TOP)
