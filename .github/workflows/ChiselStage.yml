name: Chisel CI


on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, develop, enhancement/performance ]
  # pull_request:
  #   branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  # clean:
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest

  #   # Steps represent a sequence of tasks that will be executed as part of the job
    # steps:

    #   - name: cleanCommit
    #     run: |
    #       cd /home/runner/work/RiftCore/
    #       git clone https://github.com/whutddk/RiftCore/
    #       cd RiftCore/
    #       git fetch --all
    #       git checkout gh-pages
    #       git reset --hard 4e5a
 
    #   - name: cleanPush
    #     uses: ad-m/github-push-action@master
    #     with:
    #       github_token: ${{ secrets.GITHUB_TOKEN }}
    #       branch: gh-pages
    #       force: true
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # needs: clean
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
          
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Compile
        run: |
          git submodule update --init --recursive
          sbt "test:runMain test.testMain --target-dir generated -E verilog"
          sbt doc

          # echo $GITHUB_REF_NAME
          mkdir /home/runner/work/Rift2Core/Verilog/
          mkdir /home/runner/work/Rift2Core/ScalaDoc/

          # mkdir /home/runner/work/Rift2Core/Verilog/$GITHUB_REF_NAME/
          # mkdir /home/runner/work/Rift2Core/ScalaDoc/$GITHUB_REF_NAME/
          # mkdir /home/runner/work/Rift2Core/Verilog/
          # mkdir /home/runner/work/Rift2Core/ScalaDoc/

          # cp generated /home/runner/work/Rift2Core/Verilog/$GITHUB_REF_NAME/ -r
          # cp target\scala-2.12\api /home/runner/work/Rift2Core/ScalaDoc/$GITHUB_REF_NAME -r
          cp generated /home/runner/work/Rift2Core/Verilog/ -r
          cp target\scala-2.12\api /home/runner/work/Rift2Core/ScalaDoc/ -r

      # - name: Restore Data
      #   run: |
      #     cd /home/runner/work/Rift2Core/Rift2Core/
      #     git fetch --all
      #     git checkout origin/gh-pages data/performance.js
      #     cp data/performance.js tb/ci/
      #     cp ~/riscv-tests/benchmarks/*.verilog tb/ci/

  

      - name: Commit
        run: |
          cd /home/runner/work/Rift2Core/Rift2Core
          git checkout -- .
          git fetch --all
          git checkout gh-pages

          # rm /home/runner/work/Rift2Core/Rift2Core/Verilog/$GITHUB_REF_NAME -rf
          # rm /home/runner/work/Rift2Core/Rift2Core/ScalaDoc/$GITHUB_REF_NAME -rf
          rm /home/runner/work/Rift2Core/Rift2Core/Verilog/ -rf
          rm /home/runner/work/Rift2Core/Rift2Core/ScalaDoc/ -rf

          # cp /home/runner/work/Rift2Core/Verilog/$GITHUB_REF_NAME/ /home/runner/work/Rift2Core/Rift2Core/Verilog/$GITHUB_REF_NAME/ -r
          # cp /home/runner/work/Rift2Core/ScalaDoc/$GITHUB_REF_NAME/ /home/runner/work/Rift2Core/Rift2Core/ScalaDoc/$GITHUB_REF_NAME/ -r
          cp /home/runner/work/Rift2Core/Verilog/ /home/runner/work/Rift2Core/Rift2Core/Verilog/ -r
          cp /home/runner/work/Rift2Core/ScalaDoc/ /home/runner/work/Rift2Core/Rift2Core/ScalaDoc/ -r

          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ./Verilog
          git add ./ScalaDoc
          git commit -m "update ci result"
 
      - name: push
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
          force: false




      # Runs a single command using the runners shell
      # - name: Run a one-line script
      #   run: echo Hello, world!

      # Runs a set of commands using the runners shell
      # - name: Run a multi-line script
      #   run: |
      #     echo Add other actions to build,
      #     echo test, and deploy your project.
